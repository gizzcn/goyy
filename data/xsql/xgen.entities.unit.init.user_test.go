// generated by xgen -- DO NOT EDIT
package xsql_test

import (
	"gopkg.in/goyy/goyy.v0/data/entity"
)

func NewUsers(v int) *Users {
	entities := &Users{}
	entities.Make(v)
	return entities
}

type Users struct {
	datas []*User
}

func (me *Users) Make(cap int) {
	me.datas = make([]*User, 0, cap)
}

func (me *Users) New() entity.Interface {
	return NewUser()
}

func (me *Users) Append(v entity.Interface) {
	me.datas = append(me.datas, v.(*User))
}

func (me *Users) Len() int {
	return len(me.datas)
}

func (me *Users) Cap() int {
	return cap(me.datas)
}

func (me *Users) Index(v int) entity.Interface {
	return me.datas[v]
}

func (me *Users) Slice() interface{} {
	return me.datas
}

func (me *Users) Value(v int) *User {
	return me.datas[v]
}

func (me *Users) Values() []*User {
	return me.datas
}
